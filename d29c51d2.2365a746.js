(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{143:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(1),o=n(6),s=(n(0),n(156)),a=n(158),i={id:"lesson11",title:"Scoped Slots & Render Props",sidebar_label:"Lesson11"},p={id:"advanceComp/lesson11",title:"Scoped Slots & Render Props",description:"import useBaseUrl from '@docusaurus/useBaseUrl';\r",source:"@site/docs\\advanceComp\\lesson11.md",permalink:"/github-pages-test/docs/advanceComp/lesson11",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/advanceComp/lesson11.md",sidebar_label:"Lesson11",sidebar:"someSidebar",previous:{title:"Evan You on the Mounting Process",permalink:"/github-pages-test/docs/advanceComp/lesson10"},next:{title:"Why the Composition API",permalink:"/github-pages-test/docs/vueEssential/lesson1"}},c=[{value:"Our Starting Code",id:"our-starting-code",children:[]},{value:"Problem: Extending the Component",id:"problem-extending-the-component",children:[]},{value:"The Problem with this Implementation",id:"the-problem-with-this-implementation",children:[]},{value:"The First Solution: Scoped Slots",id:"the-first-solution-scoped-slots",children:[]},{value:"Destructuring",id:"destructuring",children:[]},{value:"Using Scoped Slots in the Wild",id:"using-scoped-slots-in-the-wild",children:[]},{value:"The Second Solution: Render Props",id:"the-second-solution-render-props",children:[]},{value:"Using Render Props in the Wild",id:"using-render-props-in-the-wild",children:[{value:"Let\u2019s ReVue",id:"lets-revue",children:[]},{value:"Next Lesson",id:"next-lesson",children:[]}]}],l={rightToc:c};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"As you make your components more reusable across your application there are two patterns that can help you make your components more flexible, maintainable, and less brittle: Scoped Slots and Render Props. In this lesson we\u2019ll be going over the use-case, and understanding both techniques."),Object(s.b)("h2",{id:"our-starting-code"},"Our Starting Code"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<div id="app">\n    <products-list :products="products"></products-list>\n</div>\n')),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"<script src=\"vue.js\"><\/script>\n<script>\n    Vue.component('products-list', {\n    props: {\n        products: {\n        type: Array,\n        required: true\n        }\n    },\n    template: `\n        <ul>\n            <li v-for=\"product in products\">\n            {{ product.name }}\n            </li>\n        </ul>\n    `\n    })\n    new Vue({\n    el: '#app',\n    data: {\n            products: [{\n            name: 'Magnifying Glass',\n            image: 'magnify.png'\n            }, {\n            name: 'Light Bulb',\n            image: 'bulb.png'\n            }]\n        }\n    })\n<\/script>\n")),Object(s.b)("p",null,"As you might expect, this will display each product name:"),Object(s.b)("img",{alt:"scope slots and render props",src:Object(a.a)("/img/SlotsRender1.jpg")}),Object(s.b)("h2",{id:"problem-extending-the-component"},"Problem: Extending the Component"),Object(s.b)("p",null,"What happens when we want a products-list component that has the option to also show the image? We might extend the code like so:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<div id="app">\n    <products-list :products="products"></products-list>\n    <products-list :products="products" :show-image="true"></products-list>\n</div>\n')),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'<script src="vue.js"><\/script>\n<script>\n    Vue.component(\'products-list\', {\n    props: {\n        products: {\n        type: Array,\n        required: true\n        },\n        showImage: {\n        type: Boolean,\n        default: false\n        }\n    },\n    template: `\n    <ul>\n        <li v-for="product in products">\n        <img v-show="showImage" :src="product.image" />\n        {{ product.name }}\n        </li>\n    </ul>\n    `\n})\nnew Vue({ // ... Same as above ...})\n<\/script>\n')),Object(s.b)("p",null,"Notice how we\u2019re using a new prop called showImage, which if true shows the product image. This would display:"),Object(s.b)("img",{alt:"scope slots and render props",src:Object(a.a)("/img/SlotsRender1.jpg")}),Object(s.b)("h2",{id:"the-problem-with-this-implementation"},"The Problem with this Implementation"),Object(s.b)("p",null,"What happens when sometimes we need our ",Object(s.b)("inlineCode",{parentName:"p"},"products-list")," component to also sometimes display price, sale price, add to cart buttons, different styles, or different bullets? What might result is a very brittle component full of v-ifs and v-shows. There has to be a better way!"),Object(s.b)("h2",{id:"the-first-solution-scoped-slots"},"The First Solution: Scoped Slots"),Object(s.b)("p",null,"Scoped slots provide us with an alternative way to solve this problem. Speaking of the problem let\u2019s make it a little more difficult. How might we start with the original code above, and this time show the products image AND uppercase the product\u2019s name?"),Object(s.b)("p",null,"Here\u2019s how we could solve it using scoped slots:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<div id="app">\n    <products-list :products="products"></products-list>\n    <products-list :products="products">\n    <template slot="product" slot-scope="slotProps">\n        <img :src="slotProps.product.image" /> {{ slotProps.product.name.toUpperCase() }}\n    </template>\n    </products-list>\n</div>\n')),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'<script src="vue.js"><\/script>\n<script>\n    Vue.component(\'products-list\', {\n    props: {\n        products: {\n        type: Array,\n        required: true\n        }\n    },\n    template: `\n    <ul>\n        <li v-for="product in products">\n        <slot name="product" :product="product" >\n            {{ product.name }}\n        </slot>\n        </li>\n    </ul>`\n    })\n    new Vue({ ... Same as above ... })\n<\/script>\n')),Object(s.b)("p",null,"First notice ",Object(s.b)("inlineCode",{parentName:"p"},'<slot name="product" :product="product" >'),", this is being created like a normal slot, but it also has product as a slotProp. This slotProp can get accessed by the parent if the parent wants to override what gets displayed by default in the slot, which in this case is ",Object(s.b)("inlineCode",{parentName:"p"},"{{ product.name }}"),"."),Object(s.b)("p",null,"The parent can write out markup to get displayed inside the slot by writing ",Object(s.b)("inlineCode",{parentName:"p"},'<template slot="product" slot-scope="slotProps">'),". Inside the slotProps parameter the value is first ",Object(s.b)("inlineCode",{parentName:"p"},'{ "product": { "name": "Magnifying Glass", "image": "magnify.png" } }')," and then it is ",Object(s.b)("inlineCode",{parentName:"p"},'{ "product": { "name": "Light Bulb", "image": "bulb.png" } }'),", the two values inside the products array. As you might expect, this displays:"),Object(s.b)("img",{alt:"scope slots and render props",src:Object(a.a)("/img/SlotsRender2.jpg")}),Object(s.b)("h2",{id:"destructuring"},"Destructuring"),Object(s.b)("p",null,"It\u2019s worth noting at this point that we can use destructuring to make using slotProps a little more readable. So instead of writing:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<template slot="product" slot-scope="slotProps">\n    <img :src="slotProps.product.image" /> {{ slotProps.product.name.toUpperCase() }}\n</template>\n')),Object(s.b)("p",null,"We can simplify this to:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<template slot="product" slot-scope="{{ product }}">\n    <img :src="product.image" /> {{ product.name.toUpperCase() }}\n</template>\n')),Object(s.b)("p",null,"and we get the same result."),Object(s.b)("h2",{id:"using-scoped-slots-in-the-wild"},"Using Scoped Slots in the Wild"),Object(s.b)("p",null,"Scoped Slots can often be found in reusable component libraries like Damian Dulish\u2019s ",Object(s.b)("a",Object(r.a)({parentName:"p"},{href:"https://vue-multiselect.js.org/#sub-custom-option-template"}),"Vue-multiselect library"),". In the dropdown below we can customize the way the options are displayed by using slot-scope in our parent:"),Object(s.b)("img",{alt:"scope slots and render props",src:Object(a.a)("/img/SlotsRender3.jpg")}),Object(s.b)("p",null,"As you can see, this sort of pattern can be used for all sorts of reusable functionality."),Object(s.b)("h2",{id:"the-second-solution-render-props"},"The Second Solution: Render Props"),Object(s.b)("p",null,"In order to use render props to solve this problem, we will need to convert our template in our example code into a render function, like so:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<div id="app">\n    <products-list :products="products"></products-list>\n</div>\n')),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"<script src=\"vue.js\"><\/script>\n<script>\n    Vue.component('products-list', {\n    props: {\n        products: {\n        type: Array,\n        required: true\n        }\n    },\n    render(h) {  // <-- Notice our render function\n        return h('ul', [\n        this.products.map(product =>\n            h('li', [product.name])\n        )\n        ])\n    }\n    })\n    new Vue({ ... Same as above ... })\n<\/script>\n")),Object(s.b)("p",null,"If you\u2019re not familiar with render functions yet, I highly recommend you go ",Object(s.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.vuemastery.com/courses/advanced-components/template-compilation/"}),"watch lesson 4")," of this course where we explain template compilation."),Object(s.b)("p",null,"To use ",Object(s.b)("strong",{parentName:"p"},"Render props")," as a technique to solve our problem, we will be literally sending in a render function as a prop into our component. See below:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<div id="app">\n    <products-list :products="products"></products-list>\n    <products-list :products="products" :product-renderer="imageRenderer"></products-list>\n</div>\n')),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"<script src=\"vue.js\"><\/script>\n<script>\n    Vue.component('products-list', {\n    props: {\n        products: {\n        type: Array,\n        required: true\n        },\n        productRenderer: {  // <-- Here's our new prop\n        type: Function,\n        default (h, product) { // <-- By default just print the name\n            return product.name\n        }\n        }\n    },\n    render(h) {\n        return h('ul', [\n        this.products.map(product =>\n            h('li', [this.productRenderer(h, product)]) // use our new prop\n        )\n        ])\n    }\n    })\n    new Vue({\n    el: '#app',\n    data: {\n        products: [{\n        name: 'Magnifying Glass',\n        image: 'magnify.png'\n        }, {\n        name: 'Light Bulb',\n        image: 'bulb.png'\n        }],\n        imageRenderer(h, product) { // <-- The imageRenderer I'm passing in\n        return [\n            h('img', {\n            attrs: {\n                src: product.image\n            }\n            }),\n            ' ',\n            product.name.toUpperCase()\n        ]\n        }\n    }\n    })\n<\/script>\n")),Object(s.b)("p",null,"Notice my comments above, and then notice how I call the component: ",Object(s.b)("inlineCode",{parentName:"p"},'<products-list :products="products" :product-renderer="imageRenderer"></products-list>'),". Here I\u2019m passing in the imageRenderer that I declare in the root element."),Object(s.b)("p",null,"If I wanted to clean this up a little I could use the JSX babel plugin, which would allow me to write JSX inside of my render functions. It\u2019ll feel much more React like, if that\u2019s something you enjoy. \ud83d\ude09"),Object(s.b)("h2",{id:"using-render-props-in-the-wild"},"Using Render Props in the Wild"),Object(s.b)("p",null,"Just like with Scoped Slots we can find component libraries that use this pattern, like the ",Object(s.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/Educents/vue-autosuggest"}),"Vue-Auosuggest")," library from Darren Jennings. There are times when we might want to customize the drop-down list of autosuggestions, like you see below, with the picture next to the suggestion."),Object(s.b)("img",{alt:"scope slots and render props",src:Object(a.a)("/img/SlotsRender4.jpg")}),Object(s.b)("p",null,"If we look inside the readme, we find that we can pass in a renderSuggestion method to this component library to specify the way your suggestions are displayed. It even shows you the JSX syntax:"),Object(s.b)("img",{alt:"scope slots and render props",src:Object(a.a)("/img/SlotsRender5.jpg")}),Object(s.b)("h3",{id:"lets-revue"},"Let\u2019s ReVue"),Object(s.b)("p",null,"If you\u2019ve never seen either of these patterns before, you might be wondering why you wouldn\u2019t always use Scoped Slots. In my opinion (and Evan You\u2019s) Scoped Slots is definitely the more Vue friendly solution. However, I\u2019m sure there are some cases where you may need the extra power of Render Props, or if you\u2019re using JSX with render functions."),Object(s.b)("p",null,"Both Scoped Slots and Render Props allow the parent component to control how the child\u2019s data is displayed, which can help you create reusable and maintainable components."),Object(s.b)("h3",{id:"next-lesson"},"Next Lesson"),Object(s.b)("p",null,"On our next lesson we\u2019ll be talking with Evan You, the creator of Vue.js, about advanced Vue.js components."))}u.isMDXComponent=!0},156:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),l=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=l(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),b=r,m=u["".concat(a,".").concat(b)]||u[b]||d[b]||s;return n?o.a.createElement(m,i({ref:t},c,{components:n})):o.a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=b;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var c=2;c<s;c++)a[c]=n[c];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},157:function(e,t,n){"use strict";var r=n(0),o=n(35);t.a=function(){return Object(r.useContext)(o.a)}},158:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(157);function o(e){const{siteConfig:t}=Object(r.a)(),{baseUrl:n="/"}=t||{};if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?n+e.slice(1):n+e}}}]);