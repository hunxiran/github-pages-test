(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{156:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,b=u["".concat(i,".").concat(m)]||u[m]||d[m]||a;return n?r.a.createElement(b,s({ref:t},l,{components:n})):r.a.createElement(b,s({ref:t},l))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},157:function(e,t,n){"use strict";var o=n(0),r=n(35);t.a=function(){return Object(o.useContext)(r.a)}},158:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var o=n(157);function r(e){const{siteConfig:t}=Object(o.a)(),{baseUrl:n="/"}=t||{};if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?n+e.slice(1):n+e}},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var o=n(1),r=n(6),a=(n(0),n(156)),i=n(158),s={id:"lesson10",title:"Evan You on the Mounting Process",sidebar_label:"Lesson10"},c={id:"advanceComp/lesson10",title:"Evan You on the Mounting Process",description:"import useBaseUrl from '@docusaurus/useBaseUrl';\r",source:"@site/docs\\advanceComp\\lesson10.md",permalink:"/github-pages-test/docs/advanceComp/lesson10",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/advanceComp/lesson10.md",sidebar_label:"Lesson10",sidebar:"someSidebar",previous:{title:"The Mounting Process",permalink:"/github-pages-test/docs/advanceComp/lesson9"},next:{title:"Scoped Slots & Render Props",permalink:"/github-pages-test/docs/advanceComp/lesson11"}},l=[{value:"Platform-Based Builds",id:"platform-based-builds",children:[]},{value:"A Look into the Vue Runtime",id:"a-look-into-the-vue-runtime",children:[]},{value:"The Patching Algorithm",id:"the-patching-algorithm",children:[]},{value:"Scope for improvement",id:"scope-for-improvement",children:[]}],p={rightToc:l};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"In the previous lesson, we looked into the Vue mounting process. In this bonus lesson Evan You, the creator of Vue, gives us a tour of the source code relating to the mounting process and gives us a look forward into Vue 3."),Object(a.b)("h3",{id:"platform-based-builds"},"Platform-Based Builds"),Object(a.b)("p",null,"Evan starts by acknowledging that Vue is designed to allow for multiple platforms. He shows us the source code for the web and ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://weex.incubator.apache.org/"}),"weex")," platforms. He also discusses the relationship between the different builds in the platforms/web folder and how they correspond to the files generated in the dist folder."),Object(a.b)("p",null,"The files in the dist folder are shipped to CDNs."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"entry-runtime-with-compiler.js")," is the full ",Object(a.b)("inlineCode",{parentName:"p"},"vue.js")," that is shipped onto the CDNs."),Object(a.b)("h3",{id:"a-look-into-the-vue-runtime"},"A Look into the Vue Runtime"),Object(a.b)("p",null,"Obviously, display operations from one platform to the next are different, and that\u2019s why we have them in different directories. The code present in platforms/web/runtime is expected to be executed in the browser only. The modules like class, attrs, dom-props etc anticipate the presence of the ",Object(a.b)("inlineCode",{parentName:"p"},"window")," object and DOM APIs."),Object(a.b)("p",null,"The vue directives like ",Object(a.b)("inlineCode",{parentName:"p"},"v-show")," and ",Object(a.b)("inlineCode",{parentName:"p"},"v-model")," have their own implementation to deal with CSS and all the browser inputs respectively."),Object(a.b)("p",null,"The weex implementation in ",Object(a.b)("strong",{parentName:"p"},"platforms/weex")," also follows the same folder structure, but calls to native rendering engines (Android or iOS) to perform the operations."),Object(a.b)("h3",{id:"the-patching-algorithm"},"The Patching Algorithm"),Object(a.b)("p",null,"Evan points out to an important line of code in ",Object(a.b)("strong",{parentName:"p"},"platforms/web/runtime/index.js")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop\n")),Object(a.b)("p",null,"This is the virtual DOM ",Object(a.b)("inlineCode",{parentName:"p"},"patch")," algorithm. The patch function is imported from ",Object(a.b)("inlineCode",{parentName:"p"},"platforms/web/runtime/patch.js"),". This is created by calling ",Object(a.b)("inlineCode",{parentName:"p"},"createPatchFunction()"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'// platforms/web/runtime/patch.js\nimport * as nodeOps from "web/runtime/node-ops"; // <-- the operations needed to be performed on virtual DOM\n\nimport { createPatchFunction } from "core/vdom/patch"; // <-- the platform agnostic factory function for creating patch algorithm\n\nimport baseModules from "core/vdom/modules/index";\nimport platformModules from "web/runtime/modules/index"; // <-- browser only modules needed by patch algorithm\n\nconst modules = platformModules.concat(baseModules);\nexport const patch: Function = createPatchFunction({ nodeOps, modules });\n')),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"createPatchFunction()")," is a factory function that takes two arguments:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"nodeOps"),": the operations needed map the Virtual Dom onto the platform display (i.e. Actual DOM or Android). For example in the web nodOps, the DOM APIs are used inside these operations (think ",Object(a.b)("inlineCode",{parentName:"li"},"document.createElement"),")."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"modules"),": the list of modules needed to be injected for the diffing and patching of VNodes.")),Object(a.b)("p",null,"We can inject custom ",Object(a.b)("inlineCode",{parentName:"p"},"nodeOps")," and custom ",Object(a.b)("inlineCode",{parentName:"p"},"modules")," into the ",Object(a.b)("inlineCode",{parentName:"p"},"createPatchFunction")," to create our own patching algorithm. This is how you\u2019d use Vue for platforms other than the web. In the Vue source you can see how Weex is injecting their own ",Object(a.b)("inlineCode",{parentName:"p"},"nodeOps")," and ",Object(a.b)("inlineCode",{parentName:"p"},"modules"),"."),Object(a.b)("h3",{id:"scope-for-improvement"},"Scope for improvement"),Object(a.b)("p",null,"At the moment there is platform-specific code inside Vue Core (Web & Weex). As you might imagine, this is not separating concerns optimally. In Vue 3, Evan states that he would like to provide a first class renderer API and separate this code from Vue core. This would make it easier for other platform developers to integrate with Vue."),Object(a.b)("img",{alt:"",src:Object(i.a)("/img/EvanMounting.png")}),Object(a.b)("p",null,"In the next lesson, we jump into a killer feature of Vue: ",Object(a.b)("inlineCode",{parentName:"p"},"Scoped Slots")))}u.isMDXComponent=!0}}]);