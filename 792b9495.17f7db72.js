(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{122:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var a=n(1),r=n(6),o=(n(0),n(156)),i=n(158),s={id:"lesson2",title:"Evan You on Proxies",sidebar_label:"Lesson2"},c={id:"advanceComp/lesson2",title:"Evan You on Proxies",description:"import useBaseUrl from '@docusaurus/useBaseUrl';\r",source:"@site/docs\\advanceComp\\lesson2.md",permalink:"/github-pages-test/docs/advanceComp/lesson2",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/advanceComp/lesson2.md",sidebar_label:"Lesson2",sidebar:"someSidebar",previous:{title:"Build a Reactivity System",permalink:"/github-pages-test/docs/advanceComp/lesson1"},next:{title:"Reactivity in Vuejs",permalink:"/github-pages-test/docs/advanceComp/lesson3"}},l=[{value:"What are the Advantages?",id:"what-are-the-advantages",children:[]},{value:"Our Previous Code",id:"our-previous-code",children:[]},{value:"Solution: Using Proxy to overcome the limitations",id:"solution-using-proxy-to-overcome-the-limitations",children:[]},{value:"Implementing the Reactivity System Using Proxies",id:"implementing-the-reactivity-system-using-proxies",children:[]},{value:"Moving Total &amp; Testing",id:"moving-total--testing",children:[]},{value:"Adding Reactive Properties",id:"adding-reactive-properties",children:[]},{value:"ReVue",id:"revue",children:[]}],p={rightToc:l};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In the previous video we built out a reactivity system that mimics the Vue.js implementation of reactivity. The use of Object.defineProperty() to convert the properties into getters/setters allowed us to track them as dependencies when accessed and then rerun code (notify) when modified."),Object(o.b)("p",null,"If you have been following the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/vuejs/roadmap/blob/master/README.md"}),"Vue roadmap"),", the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/vuejs/roadmap/blob/master/README.md#2x-next"}),"2.x-next")," version\u2019s reactivity system will be rewritten with Proxies, which is different than what I showed."),Object(o.b)("img",{alt:"Docusaurus",src:Object(i.a)("/img/Proxies1.jpg")}),Object(o.b)("p",null,"I wanted to ask Evan what exactly this might look like and the advantages we get from it."),Object(o.b)("h2",{id:"what-are-the-advantages"},"What are the Advantages?"),Object(o.b)("p",null,"The ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"}),"proxy")," API allows us to create a virtual representation of an object and provides us with handlers like ",Object(o.b)("inlineCode",{parentName:"p"},"set()"),", ",Object(o.b)("inlineCode",{parentName:"p"},"get()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"deleteProperty()")," etc that we can use to intercept when properties are accessed or modified on the original object. This relieves us from the following limitations:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Usage of Vue.$set() to add new reactive properties and Vue.$delete() to delete existing properties."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://vuejs.org/v2/guide/list.html#Caveatshttps://vuejs.org/v2/guide/list.html#Caveats"}),"Array change detection"),".")),Object(o.b)("h2",{id:"our-previous-code"},"Our Previous Code"),Object(o.b)("p",null,"Previously we used Object.defineProperty() to listen for when our properties are get and set. Here is a codepen which shows where we ended up on the last lesson:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'let data = { price: 5, quantity: 2 };\nlet target = null;\n\n// Our simple Dep class\nclass Dep {\n  constructor() {\n    this.subscribers = [];\n  }\n  depend() {\n    if (target && !this.subscribers.includes(target)) {\n      // Only if there is a target & it\'s not already subscribed\n      this.subscribers.push(target);\n    }\n  }\n  notify() {\n    this.subscribers.forEach(sub => sub());\n  }\n}\n\n// Go through each of our data properties\nObject.keys(data).forEach(key => {\n  let internalValue = data[key];\n\n  // Each property gets a dependency instance\n  const dep = new Dep();\n\n  Object.defineProperty(data, key, {\n    get() {\n      dep.depend(); // <-- Remember the target we\'re running\n      return internalValue;\n    },\n    set(newVal) {\n      internalValue = newVal;\n      dep.notify(); // <-- Re-run stored functions\n    }\n  });\n});\n\n// The code to watch to listen for reactive properties\nfunction watcher(myFunc) {\n  target = myFunc;\n  target();\n  target = null;\n}\n\nwatcher(() => {\n  data.total = data.price * data.quantity;\n});\n\nconsole.log("total = " + data.total)\ndata.price = 20\nconsole.log("total = " + data.total)\ndata.quantity = 10\nconsole.log("total = " + data.total)\n')),Object(o.b)("h2",{id:"solution-using-proxy-to-overcome-the-limitations"},"Solution: Using Proxy to overcome the limitations"),Object(o.b)("p",null,"Instead of looping through each property to add ",Object(o.b)("inlineCode",{parentName:"p"},"getters/setters")," we can set up a proxy on our ",Object(o.b)("inlineCode",{parentName:"p"},"data")," object using:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"//data is our source object being observed\nconst observedData = new Proxy(data, { \n  get() {\n    //invoked when property from source data object is accessed\n  },\n  set() {\n    //invoked when property from source data object is modified\n  },\n  deleteProperty() {\n    //invoked when property from source data object is deleted\n  }\n});\n")),Object(o.b)("p",null,"The second argument passed to ",Object(o.b)("inlineCode",{parentName:"p"},"Proxy")," constructor function is called the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler"}),"handler"),". Handler is nothing but an object that contains functions known as traps. These traps allow us to intercept operations happening on the source ",Object(o.b)("inlineCode",{parentName:"p"},"data")," object."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"get()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"set()")," are two traps that can be used to invoke ",Object(o.b)("inlineCode",{parentName:"p"},"dep.depend()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"dep.notify()")," respectively. The ",Object(o.b)("inlineCode",{parentName:"p"},"set()")," trap will be invoked even for the newly added properties, so it can be it can be used to make new properties reactive. Hence, we no longer need to declare new reactive properties using ",Object(o.b)("inlineCode",{parentName:"p"},"Vue.$set()"),". The same applies for deletion of reactive properties which can be handled in ",Object(o.b)("inlineCode",{parentName:"p"},"deleteProperty()")," trap."),Object(o.b)("h2",{id:"implementing-the-reactivity-system-using-proxies"},"Implementing the Reactivity System Using Proxies"),Object(o.b)("p",null,"Even though the Proxy API is not yet incorporated into Vue\u2019s reactivity system, let\u2019s try to implement the reactivity system from the previous lesson using Proxy ourselves. The first thing we\u2019ll change is our ",Object(o.b)("inlineCode",{parentName:"p"},"Object.keys(data).forEach")," loop, which we\u2019ll now use to create a new Dep for each reactive property."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let deps = new Map(); // Let's store all of our data's deps in a map\nObject.keys(data).forEach(key => {\n  // Each property gets a dependency instance\n  deps.set(key, new Dep());\n});\n\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Side Note:")," The ",Object(o.b)("inlineCode",{parentName:"p"},"Dep")," class remains the same. Now we\u2019ll replace the use of ",Object(o.b)("inlineCode",{parentName:"p"},"Object.defineProperty")," with the use of a proxy:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let data_without_proxy = data; // Save old data object\ndata = new Proxy(data_without_proxy, {\n  // Override data to have a proxy in the middle\n  get(obj, key) {\n    deps.get(key).depend(); // <-- Remember the target we're running\n    return obj[key]; // call original data\n  },\n  set(obj, key, newVal) {\n    obj[key] = newVal; // Set original data to new value\n    deps.get(key).notify(); // <-- Re-run stored functions\n    return true;\n  }\n});\n")),Object(o.b)("p",null,"As you can see, we create a variable ",Object(o.b)("inlineCode",{parentName:"p"},"data_without_proxy")," that holds the copy of our source ",Object(o.b)("inlineCode",{parentName:"p"},"data")," object which will be used when overwriting the ",Object(o.b)("inlineCode",{parentName:"p"},"data")," object to have a ",Object(o.b)("inlineCode",{parentName:"p"},"Proxy")," object. The ",Object(o.b)("inlineCode",{parentName:"p"},"get()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"set()")," traps are passed in as the properties to handler object which is the 2nd argument."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"get(obj, key)")," This is the function that gets invoked when a property is accessed. It receives the original object i.e ",Object(o.b)("inlineCode",{parentName:"p"},"data_without_proxy")," as ",Object(o.b)("inlineCode",{parentName:"p"},"obj")," and the key of the property that is accessed. We call the ",Object(o.b)("inlineCode",{parentName:"p"},"depend()")," method of the specific ",Object(o.b)("inlineCode",{parentName:"p"},"Dep")," class associated to that particular property. At last the value related to that key is returned using ",Object(o.b)("inlineCode",{parentName:"p"},"return obj[key]"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"set(obj, key, newVal)")," The first two arguments are the same as the above-mentioned ",Object(o.b)("inlineCode",{parentName:"p"},"get()")," trap. The 3rd argument is the new modified value. Then we set the new value to the property that is modified using ",Object(o.b)("inlineCode",{parentName:"p"},"obj[key] = newVal")," and call the ",Object(o.b)("inlineCode",{parentName:"p"},"notify()")," method."),Object(o.b)("h2",{id:"moving-total--testing"},"Moving Total & Testing"),Object(o.b)("p",null,"We need to make one more small change to our code. We need to extract ",Object(o.b)("inlineCode",{parentName:"p"},"total")," into its own variable as it does not need to be reactive."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'let total = 0;\nwatcher(() => {\n  total = data.price * data.quantity;\n});\nconsole.log("total = " + total);\ndata.price = 20;\nconsole.log("total = " + total);\ndata.quantity = 10;\nconsole.log("total = " + total);\n')),Object(o.b)("p",null,"Now when we re-run the program, we see the following output in the console:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"total = 10\ntotal = 40\ntotal = 200\n")),Object(o.b)("p",null,"That\u2019s a good sign. The ",Object(o.b)("inlineCode",{parentName:"p"},"total")," updates when we update the price and ",Object(o.b)("inlineCode",{parentName:"p"},"quantity"),"."),Object(o.b)("h2",{id:"adding-reactive-properties"},"Adding Reactive Properties"),Object(o.b)("p",null,"Now we should be able to add properties into ",Object(o.b)("inlineCode",{parentName:"p"},"data")," without declaring them upfront. That was one of the reasons for considering proxies over ",Object(o.b)("inlineCode",{parentName:"p"},"getters/setters")," right? Let\u2019s try it out."),Object(o.b)("p",null,"We can add the following code:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'deps.set("discount", new Dep());  // Need a new dep for our property\ndata["discount"] = 5; // Add our new property\n\nlet salePrice = 0; \n\nwatcher(() => {  // New code to watch which includes our reactive property\n  salePrice = data.price - data.discount;\n});\n\nconsole.log("salePrice = " + salePrice);\ndata.discount = 7.5;  // This should be reactive, and rerun the watcher.\nconsole.log("salePrice = " + salePrice);\n')),Object(o.b)("p",null,"When the program is run we can see the following output:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"....\nsalePrice = 15\nsalePrice = 12.5\n")),Object(o.b)("p",null,"You can see that when the ",Object(o.b)("inlineCode",{parentName:"p"},"data.discount")," is modified the salePrice also gets updated. Hurray! The finished code can ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://codepen.io/GreggPollack/pen/gKogaE"}),"be seen here"),"."),Object(o.b)("h2",{id:"revue"},"ReVue"),Object(o.b)("p",null,"In this lesson Evan You spoke to us about how future versions of Vue (v2.6-next) could implement reactivity using Proxies. We learned more about:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The limitations of current reactivity system"),Object(o.b)("li",{parentName:"ul"},"How proxies work"),Object(o.b)("li",{parentName:"ul"},"How to build a reactivity system using proxies")),Object(o.b)("p",null,"In the next video, we\u2019ll dive into the Vue source code and discover where reactivity lies."))}d.isMDXComponent=!0},156:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},d=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,h=d["".concat(i,".").concat(u)]||d[u]||b[u]||o;return n?r.a.createElement(h,s({ref:t},l,{components:n})):r.a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},157:function(e,t,n){"use strict";var a=n(0),r=n(35);t.a=function(){return Object(a.useContext)(r.a)}},158:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(157);function r(e){const{siteConfig:t}=Object(a.a)(),{baseUrl:n="/"}=t||{};if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?n+e.slice(1):n+e}}}]);